/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.parks;

import br.com.parks.entity.ONU;
import br.com.parks.util.ControllerOlt;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tiago
 */
public class MangerParks extends javax.swing.JFrame {

    /**
     * Creates new form MangerParks
     */
    public MangerParks() {
        initComponents();        
        tabbedPanel.add(new OnuPanel());
        tabbedPanel.setTitleAt(1, "ONU1");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPanel = new javax.swing.JTabbedPane();
        tabOlt = new javax.swing.JPanel();
        txtMgmtIpOlt = new javax.swing.JTextField();
        lbMgmtOlt = new javax.swing.JLabel();
        lbSerialONU = new javax.swing.JLabel();
        txtSerialOnu = new javax.swing.JTextField();
        lbUserOlt = new javax.swing.JLabel();
        txtUserOlt = new javax.swing.JTextField();
        txtMgmtOnu = new javax.swing.JTextField();
        lbPassOlt = new javax.swing.JLabel();
        txtPassOlt = new javax.swing.JPasswordField();
        lbIpMgmtOnu = new javax.swing.JLabel();
        btFindOnus = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbOnus = new javax.swing.JTable();
        btCleanTable = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtMgmtIpOlt.setText("192.168.201.130");

        lbMgmtOlt.setForeground(new java.awt.Color(29, 23, 230));
        lbMgmtOlt.setText("Man. IP OLT:");

        lbSerialONU.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lbSerialONU.setForeground(new java.awt.Color(7, 168, 1));
        lbSerialONU.setText("Serial ONU:");

        txtSerialOnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialOnuActionPerformed(evt);
            }
        });

        lbUserOlt.setForeground(new java.awt.Color(29, 23, 230));
        lbUserOlt.setText("User:");

        txtUserOlt.setText("admin");
        txtUserOlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserOltActionPerformed(evt);
            }
        });

        lbPassOlt.setForeground(new java.awt.Color(29, 23, 230));
        lbPassOlt.setText("Pass:");

        txtPassOlt.setText("parks");

        lbIpMgmtOnu.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lbIpMgmtOnu.setForeground(new java.awt.Color(7, 168, 1));
        lbIpMgmtOnu.setText("or IP:");

        btFindOnus.setText("Find");
        btFindOnus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFindOnusActionPerformed(evt);
            }
        });

        tbOnus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ifPon", "IDX", "Serial", "IP Mgmt"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbOnus);
        if (tbOnus.getColumnModel().getColumnCount() > 0) {
            tbOnus.getColumnModel().getColumn(0).setMinWidth(60);
            tbOnus.getColumnModel().getColumn(0).setMaxWidth(60);
            tbOnus.getColumnModel().getColumn(1).setMinWidth(40);
            tbOnus.getColumnModel().getColumn(1).setMaxWidth(40);
        }

        btCleanTable.setText("Clear");
        btCleanTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCleanTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabOltLayout = new javax.swing.GroupLayout(tabOlt);
        tabOlt.setLayout(tabOltLayout);
        tabOltLayout.setHorizontalGroup(
            tabOltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabOltLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabOltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabOltLayout.createSequentialGroup()
                        .addGroup(tabOltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbSerialONU)
                            .addComponent(lbMgmtOlt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabOltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMgmtIpOlt, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                            .addComponent(txtSerialOnu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabOltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbUserOlt)
                            .addComponent(lbIpMgmtOnu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabOltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(tabOltLayout.createSequentialGroup()
                                .addComponent(txtUserOlt, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbPassOlt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPassOlt))
                            .addComponent(txtMgmtOnu)))
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabOltLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btCleanTable, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btFindOnus, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        tabOltLayout.setVerticalGroup(
            tabOltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabOltLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(tabOltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMgmtIpOlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbMgmtOlt)
                    .addComponent(lbUserOlt)
                    .addComponent(txtUserOlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPassOlt)
                    .addComponent(txtPassOlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabOltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSerialONU)
                    .addComponent(txtSerialOnu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMgmtOnu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbIpMgmtOnu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabOltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btFindOnus)
                    .addComponent(btCleanTable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPanel.addTab("OLT", tabOlt);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPanel)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPanel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void txtUserOltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserOltActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserOltActionPerformed

    private void txtSerialOnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialOnuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialOnuActionPerformed

    private void btFindOnusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFindOnusActionPerformed
        ControllerOlt colt = new ControllerOlt(txtMgmtIpOlt.getText(), txtUserOlt.getText(), txtPassOlt.getText());
        displayResultOnuTable(colt.getOnus());
        colt.disconnect();
    }//GEN-LAST:event_btFindOnusActionPerformed

    private void btCleanTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCleanTableActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) tbOnus.getModel();
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
    }//GEN-LAST:event_btCleanTableActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MangerParks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MangerParks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MangerParks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MangerParks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MangerParks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton btCleanTable;
    private javax.swing.JButton btFindOnus;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbIpMgmtOnu;
    private javax.swing.JLabel lbMgmtOlt;
    private javax.swing.JLabel lbPassOlt;
    private javax.swing.JLabel lbSerialONU;
    private javax.swing.JLabel lbUserOlt;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JPanel tabOlt;
    private javax.swing.JTabbedPane tabbedPanel;
    private javax.swing.JTable tbOnus;
    private javax.swing.JTextField txtMgmtIpOlt;
    private javax.swing.JTextField txtMgmtOnu;
    private javax.swing.JPasswordField txtPassOlt;
    private javax.swing.JTextField txtSerialOnu;
    private javax.swing.JTextField txtUserOlt;
    // End of variables declaration//GEN-END:variables

    private void displayResultOnuTable(List<ONU> result) {
        DefaultTableModel dtm = (DefaultTableModel) tbOnus.getModel();
        for (ONU o : result) {
            dtm.addRow(new String[]{o.getIfGpon(), Integer.toString(o.getIndex()), o.getSerial(), o.getMgmtIp()});
        }
        tbOnus.setModel(dtm);
    }
}
